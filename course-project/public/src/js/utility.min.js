const dbPromise=idb.open("post-store",1,e=>{e.objectStoreNames.contains("posts")||e.createObjectStore("posts",{keyPath:"id"}),e.objectStoreNames.contains("sync-posts")||e.createObjectStore("sync-posts",{keyPath:"id"})}),writeData=(t,r)=>dbPromise.then(e=>{e=e.transaction(t,"readwrite");return e.objectStore(t).put(r),e.complete}),readAllData=t=>dbPromise.then(e=>{return e.transaction(t,"readonly").objectStore(t).getAll()}),clearAllData=t=>dbPromise.then(e=>{e=e.transaction(t,"readwrite");return e.objectStore(t).clear(),e.complete}),deleteItemFromData=(t,r)=>{dbPromise.then(e=>{e=e.transaction(t,"readwrite");return e.objectStore(t).delete(r),e.complete}).then(()=>console.log("Item deleted."))};function urlBase64ToUint8Array(e){for(var e=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),t=window.atob(e),r=new Uint8Array(t.length),o=0;o<t.length;++o)r[o]=t.charCodeAt(o);return r}function dataURItoBlob(e){var t=atob(e.split(",")[1]),e=e.split(",")[0].split(":")[1].split(";")[0],r=new ArrayBuffer(t.length),o=new Uint8Array(r);for(let e=0;e<t.length;e++)o[e]=t.charCodeAt(e);return new Blob([r],{type:e})}